name: Reusable Deploy Workflow

on:
  workflow_call:
    inputs:
      service_name:
        required: true
        type: string

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.build_image.outputs.image }}
    steps:
      - name: 1. Checkout del código
        uses: actions/checkout@v4

      - name: 2. Iniciar sesión en Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 3. Construir y subir la imagen a Docker Hub
        id: build_image
        uses: docker/build-push-action@v5
        with:
          context: ./microservices/${{ inputs.service_name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ inputs.service_name }}:latest

  deploy-to-vm:
    runs-on: ubuntu-latest
    needs: build-and-push
    env:
      SERVICE_NAME: ${{ inputs.service_name }}
      PROJECT_DIR: /home/adminuser/microservice-app-example
    
    steps:
      - name: 1. Checkout del código
        uses: actions/checkout@v4
      
      - name: 2. Instalar Ansible
        run: pip install ansible-core docker

      - name: 3. Instalar Colección de Ansible para Docker
        run: ansible-galaxy collection install community.docker

      - name: 4. Ejecutar Playbook de Despliegue de Ansible
        run: |
          cd ansible
          ansible-playbook playbook.yml \
            -i "${{ vars.SSH_HOST }}," \
            --extra-vars "service_name=${{ env.SERVICE_NAME }}" \
            --extra-vars "project_dir=${{ env.PROJECT_DIR }}" \
            --extra-vars "github_repository=${{ github.repository }}" \
            --extra-vars "dockerhub_username=${{ secrets.DOCKERHUB_USERNAME }}" \
            --extra-vars "ansible_user=${{ secrets.SSH_USERNAME }}" \
            --extra-vars "ansible_ssh_pass=${{ secrets.SSH_PASSWORD }}" \
            -vv

      - name: 5. Verificar estado del servicio desplegado
        run: |
          cd ansible
          echo "Verificando que el servicio ${{ env.SERVICE_NAME }} esté corriendo..."
          ansible all \
            -i "${{ vars.SSH_HOST }}," \
            --extra-vars "ansible_user=${{ secrets.SSH_USERNAME }} ansible_ssh_pass=${{ secrets.SSH_PASSWORD }}" \
            -m shell \
            -a "cd ${{ env.PROJECT_DIR }} && docker compose -f docker-compose.prod.yml ps ${{ env.SERVICE_NAME }}" \
            -vv